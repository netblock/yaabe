/*
AMD/ATI uses the PCI IDs of their older cards to select the correct hardware IP
codepaths in the driver. This unfortunately means some bios structures require
such context to be correctly decoded.

Sorta starting with navi10, AMD moved to a tell-me-what-you-have discovery
system.
See AMD's include/discovery.h and amdgpu/amdgpu_discovery.c for more info
Getting to the discovery table might be through pspdirtable
https://doc.coreboot.org/soc/amd/psp_integration.html#psp-directory-table
*/

#ifndef PCI_ID_LUT_H
#define PCI_ID_LUT_H

// check the bottom for more includes

enum amd_asic_type:uint8_t { // ATI and AMD merged
	CHIP_UNKNOWN  = 0,

	// radeon driver only
	CHIP_R100     = 1,
	CHIP_RV100    = 2,
	CHIP_RS100    = 3,
	CHIP_RV200    = 4,
	CHIP_RS200    = 5,
	CHIP_R200     = 6,
	CHIP_RV250    = 7,
	CHIP_RS300    = 8,
	CHIP_RV280    = 9,
	CHIP_R300    = 10,
	CHIP_R350    = 11,
	CHIP_RV350   = 12,
	CHIP_RV380   = 13,
	CHIP_R420    = 14,
	CHIP_R423    = 15,
	CHIP_RV410   = 16,
	CHIP_RS400   = 17,
	CHIP_RS480   = 18,
	CHIP_RS600   = 19,
	CHIP_RS690   = 20,
	CHIP_RS740   = 21,
	CHIP_RV515   = 22,
	CHIP_R520    = 23,
	CHIP_RV530   = 24,
	CHIP_RV560   = 25,
	CHIP_RV570   = 26,
	CHIP_R580    = 27,
	CHIP_R600    = 28,
	CHIP_RV610   = 29,
	CHIP_RV630   = 30,
	CHIP_RV670   = 31,
	CHIP_RV620   = 32,
	CHIP_RV635   = 33,
	CHIP_RS780   = 34,
	CHIP_RS880   = 35,
	CHIP_RV770   = 36,
	CHIP_RV730   = 37,
	CHIP_RV710   = 38,
	CHIP_RV740   = 39,
	CHIP_CEDAR   = 40,
	CHIP_REDWOOD = 41,
	CHIP_JUNIPER = 42,
	CHIP_CYPRESS = 43,
	CHIP_HEMLOCK = 44,
	CHIP_PALM    = 45,
	CHIP_SUMO    = 46,
	CHIP_SUMO2   = 47,
	CHIP_BARTS   = 48,
	CHIP_TURKS   = 49,
	CHIP_CAICOS  = 50,
	CHIP_CAYMAN  = 51,
	CHIP_ARUBA   = 52,

	// intersection
	CHIP_TAHITI   = 53,
	CHIP_PITCAIRN = 54,
	CHIP_VERDE    = 55,
	CHIP_OLAND    = 56,
	CHIP_HAINAN   = 57,
	CHIP_BONAIRE  = 58,
	CHIP_KAVERI   = 59,
	CHIP_KABINI   = 60,
	CHIP_HAWAII   = 61,
	CHIP_MULLINS  = 62,

	// amdgpu driver only
	CHIP_TOPAZ     = 63,
	CHIP_TONGA     = 64,
	CHIP_FIJI      = 65,
	CHIP_CARRIZO   = 66,
	CHIP_STONEY    = 67,
	CHIP_POLARIS10 = 68,
	CHIP_POLARIS11 = 69,
	CHIP_POLARIS12 = 70,
	CHIP_VEGAM     = 71,
	CHIP_VEGA10    = 72,
	CHIP_VEGA12    = 73,
	CHIP_VEGA20    = 74,
	CHIP_RAVEN     = 75,
	CHIP_ARCTURUS  = 76,
	CHIP_RENOIR    = 77,
	CHIP_ALDEBARAN = 78,
	CHIP_NAVI10    = 79,
	CHIP_CYAN_SKILLFISH   = 80,
	CHIP_NAVI14           = 81,
	CHIP_NAVI12           = 82,
	CHIP_SIENNA_CICHLID   = 83,
	CHIP_NAVY_FLOUNDER    = 84,
	CHIP_VANGOGH          = 85,
	CHIP_DIMGREY_CAVEFISH = 86,
	CHIP_BEIGE_GOBY       = 87,
	CHIP_YELLOW_CARP      = 88,
	CHIP_IP_DISCOVERY     = 89, // see discovery.h
	CHIP_LAST,
};

// driver has feature flagging in its PCI ID list. Currently atomtree doesn't
// need info from here.
union amd_chip_flags {
    uint16_t chip_flags;
	struct { uint16_t
		// amd
		mobility        :1,
		APU             :1,
		ACPI_ATPX       :1,
		experimental_hw :1,

		// radeon
		single_CRTC     :1,
		AGP             :1,
		has_hierz       :1,
		PCIe            :1,
		new_memmap      :1,
		PCI             :1,
		igpgart         :1,

		_rsvd0:5;
	};
};

union pci_ids_pun {
	uint32_t device_vendor;
	struct {
		uint16_t vendor;
		uint16_t device;
	};
};

struct atomtree_pci_id {
	union pci_ids_pun ids;
	union amd_chip_flags flags;
    enum amd_asic_type chip;
};

int16_t // -1 if error
atomtree_pci_id_bsearch_left( // finds leftmost
		struct atomtree_pci_id const* pci_id_lut,
		uint16_t pci_id_lut_length,
		union pci_ids_pun ids
		);

enum amd_asic_type
get_amd_chip_from_pci_id(
		uint16_t const vendor,
		uint16_t const device
		);

// ppatui.py autogenerated:
#include "amd_pci_ids.h"

#endif
