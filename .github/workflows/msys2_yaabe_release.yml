name: msys2_yaabe_release
on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'tag to build binaries for'
        required: true
        type: string
#  push:
#    tags:
#      v[0-9]+.[0-9]+.[0-9]+

permissions:
  contents: write



jobs:
  yaabe-windows-release:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v4
      - uses: msys2/setup-msys2@v2
        with:
          msystem: mingw64
          update: true
          install: >-
            mingw-w64-x86_64-toolchain
            base-devel
            mingw-w64-x86_64-meson
            mingw-w64-x86_64-gtk4
            mingw-w64-x86_64-python-json5
            mingw-w64-x86_64-nsis
      - name: env_setup
        id: env_setup
        run: |
          TAG=${{inputs.tag}}
          YAABE_VER_STRIPPED=${TAG//v/}
          echo $YAABE_VER_STRIPPED
          echo "YAABE_VER_STRIPPED=$YAABE_VER_STRIPPED" >> "$GITHUB_OUTPUT"
          YAABE_INSTALLER=yaabe-installer-${YAABE_VER_STRIPPED}.exe
          echo $YAABE_INSTALLER
          echo "YAABE_INSTALLER=$YAABE_INSTALLER" >> "$GITHUB_OUTPUT"
      - name: yaabe_compile
        id: yaabe_compile
        run: |
          meson setup build --buildtype=release -Db_lto=true -Dnsis_installer=true
          cd build
          meson compile
      - name: sha_gen
        id: sha_gen
        env:
          YAABE_INSTALLER: ${{steps.env_setup.outputs.yaabe_installer}}
        run: |
          cd ./build
          SHA_LINE=`sha256sum $YAABE_INSTALLER`
          echo $SHA_LINE
          echo "SHA_LINE=$SHA_LINE" >> "$GITHUB_OUTPUT"
      - name: gh_page_release
        id: gh_page_release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          name: ${{inputs.tag}}
          tag_name: refs/tags/${{inputs.tag}}
          body: ${{steps.sha_gen.outputs.sha_line}}
          files: build/$YAABE_INSTALLER
          fail_on_unmatched_files: true
